{"version":3,"file":"static/js/946.4df2b12c.chunk.js","mappings":"2NAaA,aAAe,OAAf,0BAAe,2GACUA,MADV,uBACLC,EADK,EACLA,KADK,kBAENA,GAFM,kEAXfD,IAAAA,SAAAA,QAAyB,mE,+DCEV,SAASE,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KACMC,GAAKC,EAAAA,EAAAA,SAeX,OAbAC,EAAAA,EAAAA,YAAU,WACRH,EAAU,WDEC,WAAf,+BCDII,GACGC,MAAK,SAAAb,GACJI,EAAUJ,GACVQ,EAAU,WACX,IACAM,OAAM,SAAAT,GACLC,EAASD,EAAMU,SACfP,EAAU,WACX,GACJ,GAAE,KAGD,UAACQ,EAAA,EAAD,WACY,aAATT,IAAuB,SAACU,EAAA,EAAD,UACrBd,EAAOe,KAAI,SAACC,EAAMC,GAAP,OACV,UAACC,EAAA,GAAD,WAA0BF,EAAKG,QAA/B,KAA0CH,EAAKI,QAAhCd,EAAGW,EADR,MAIF,YAAXb,IAAyB,SAACiB,EAAA,EAAD,mCACd,aAAXjB,IAA0B,UAACiB,EAAA,EAAD,uFAAsFnB,EAAtF,0BAGhC,CChCc,SAASoB,IACtB,OACE,+BACE,SAACxB,EAAD,KAGL,C","sources":["service/priceAPI.js","components/PriceList/PriceList.jsx","pages/Prices.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://7b20ae47-eab5-4eb0-8239-4bc52da2623a.mock.pstmn.io/price';\n\n// export const token = {\n//   set(token) {\n//     axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n//   },\n//   unset() {\n//     axios.defaults.headers.common.Authorization = '';\n//   },\n// };\n\nexport default async function getPriceList() {\n  const { data } = await axios();\n  return data;\n}\n","import getPriceList from '../../service/priceAPI';\nimport { Box, List, ListItem, Typography } from '@mui/material';\nimport { useEffect, useState, useId } from 'react';\n\nexport default function PriceList() {\n  const [prices, setPrices] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const id = useId();\n\n  useEffect(() => {\n    setStatus('pending');\n    getPriceList()\n      .then(data => {\n        setPrices(data);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error.message);\n        setStatus('rejected');\n      })\n  }, []);\n\n  return (\n    <Box>\n      {status==='resolved' && <List>\n        {prices.map((item, index) => (\n          <ListItem key={id+index}>{item.service}: {item.price}</ListItem>\n        ))}\n      </List>}\n      {status === 'pending' && (<Typography>Requesting Prices...</Typography>)}\n      {status === 'rejected' && (<Typography>Something went seriously wrong while fetching Price-List. Error message: {error}. Try again later.</Typography>)}\n    </Box>\n  );\n}\n","import PriceList from '../components/PriceList';\n\nexport default function Prices() {\n  return (\n    <>\n      <PriceList />\n    </>\n  );\n}\n"],"names":["axios","data","PriceList","useState","prices","setPrices","error","setError","status","setStatus","id","useId","useEffect","getPriceList","then","catch","message","Box","List","map","item","index","ListItem","service","price","Typography","Prices"],"sourceRoot":""}